<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="AdminUserLogin" name="OMSUIAutomation">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../../../../Software/eclipse-jee-mars-R-win32-x86_64/eclipse/"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.7"/>
    <property name="source" value="1.7"/>
    <path id="OMSUIAutomation.classpath">
        <pathelement location="bin"/>
        <pathelement location="lib/hamcrest-core-1.3.jar"/>
        <pathelement location="lib/hamcrest-core-1.3-javadoc.jar"/>
        <pathelement location="lib/hamcrest-core-1.3-sources.jar"/>
        <pathelement location="lib/junit-4.11.jar"/>
        <pathelement location="lib/junit-4.11-javadoc.jar"/>
        <pathelement location="lib/junit-4.11-sources.jar"/>
        <pathelement location="lib/jsch-0.1.51.jar"/>
        <pathelement location="lib/log4j-1.2.17.jar"/>
        <pathelement location="lib/mysql-connector-java-5.1.18-bin.jar"/>
        <pathelement location="lib/ganymed-ssh2.jar"/>
        <pathelement location="lib/java-json.jar"/>
        <pathelement location="lib/javacsv-2.0.jar"/>
        <pathelement location="lib/jsoup-1.10.2.jar"/>
        <pathelement location="lib/selenium-server-standalone-3.3.1.jar"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="config">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <src path="config"/>
            <classpath refid="OMSUIAutomation.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target depends="build" name="AdminUserLogin">
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="JunitTestSuites.TestSuite" todir="${junit.output.dir}"/>
            <classpath refid="OMSUIAutomation.classpath"/>
        </junit>
    	<parallel threadCount='4'>
    		<junit fork="yes" printsummary="withOutAndErr">
    		    <formatter type="xml"/>
    		    <test name="UITestCases.MigrateJobs.StartJobConcurrently" todir="${junit.output.dir}"/>
    		    <classpath refid="OMSUIAutomation.classpath"/>
    		</junit>
    		<junit fork="yes" printsummary="withOutAndErr">
            	<formatter type="xml"/>
            	<test name="UITestCases.MigrateJobs.StartJobConcurrentlyAnotherUser" todir="${junit.output.dir}"/>
            	<classpath refid="OMSUIAutomation.classpath"/>
        	</junit>
    	</parallel>
    </target>
	
    <target depends="build" name="AdminUserLogin1">
    	<parallel threadCount='4'>
    		<junit fork="yes" printsummary="withOutAndErr">
    		    <formatter type="xml"/>
    		    <test name="UITestCases.login.UserLogin" todir="${junit.output.dir}"/>
    		    <classpath refid="OMSUIAutomation.classpath"/>
    		</junit>
    		<junit fork="yes" printsummary="withOutAndErr">
            	<formatter type="xml"/>
            	<test name="UITestCases.login.AdminUserLogin" todir="${junit.output.dir}"/>
            	<classpath refid="OMSUIAutomation.classpath"/>
        	</junit>
    	</parallel>
		<junit fork="yes" printsummary="withOutAndErr">
        	<formatter type="xml"/>
        	<test name="UITestCases.loghandler.FinishTest" todir="${junit.output.dir}"/>
        	<classpath refid="OMSUIAutomation.classpath"/>
    	</junit>
    </target>
	
    <target name="JunitTestSuites">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="JunitTestSuites.TestSuite" todir="${junit.output.dir}"/>
            <classpath refid="OMSUIAutomation.classpath"/>
        </junit>
    </target>
    <target name="OMSUIAutomation">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="JunitTestSuites.TestSuite" todir="${junit.output.dir}"/>
            <test name="UITestCases.MigrateJobs.ExecuteJob" todir="${junit.output.dir}"/>
            <test name="UITestCases.dashboard.AdminDashboard" todir="${junit.output.dir}"/>
            <test name="UITestCases.dashboard.UserDashboard" todir="${junit.output.dir}"/>
            <test name="UITestCases.loghandler.FinishTest" todir="${junit.output.dir}"/>
            <test name="UITestCases.login.AccessNonLoginPageWithoutAuthentication" todir="${junit.output.dir}"/>
            <test name="UITestCases.login.AdminUserLogin" todir="${junit.output.dir}"/>
            <test name="UITestCases.login.RememberUserName" todir="${junit.output.dir}"/>
            <test name="UITestCases.login.UserLogin" todir="${junit.output.dir}"/>
            <test name="UITestCases.login.WrongCredentialsValidation" todir="${junit.output.dir}"/>
            <test name="UITestCases.logout.UserLogOut" todir="${junit.output.dir}"/>
            <test name="zapi.zapiTest" todir="${junit.output.dir}"/>
            <classpath refid="OMSUIAutomation.classpath"/>
        </junit>
    </target>
    <target name="zapiTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="zapi.zapiTest" todir="${junit.output.dir}"/>
            <classpath refid="OMSUIAutomation.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
